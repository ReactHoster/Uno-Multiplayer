/*
font-family: 'Merienda', cursive;
font-family: 'Montserrat', sans-serif;
*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;

    --chooseColBlockSize: 65px;
    --chooseColBlockDefaultPos: 10%;
}
a {
    text-decoration: none;
    color: inherit;
}
body {
    background-color: #2E2E2E;
    font-family: 'Montserrat', sans-serif;
}

main {
    display: flex;
    align-items: center;
    justify-content: center;

    height: 100vh;
}

.main {
    background-color: #525464;    
    height: 98%;
    width: 98%;
    position: relative;
}

/* 
//////////////////////////////////////////////////////
/////////////////           Up
//////////////////////////////////////////////////////
*/

section.up, section.middle, section.down {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
}

section.up {
    width: 100%;
    height: var(--section-top-height);

    padding-top: 1rem;
    padding-left: 10%;
    padding-right: 10%;
}

section.down {
    width: 100%;
    height: var(--section-bottom-height);
    
    padding-bottom: 1rem;
    padding-left: 10%;
    padding-right: 10%;
}

/* 
////////////////////////////////////////////////////////////////////////////////////
////////////////////////                Middle
////////////////////////////////////////////////////////////////////////////////////
*/

section.middle {
    justify-content: space-between;

    width: 100%;
    height: var(--section-middle-height);
    /* padding: 0rem 3rem; */

}
.middleLeft, .middleRight {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;

    max-width: 30%;
    height: 100%;
    padding: 0rem 1rem;
}

.middleMiddle {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
}

/* 
////////////////////////////////////////////////////////////////
////////////        Choose color
////////////////////////////////////////////////////////////////
*/

.wildChooseColor {
    display: none;
    position: relative;
    height: 14rem;
    width: 14rem;
}

.wildChooseColor .block {
    position: absolute;
    width: var(--chooseColBlockSize, 65px);
    height: var(--chooseColBlockSize, 65px);
    border-radius: 5px;
    transform: rotate(45deg);
}
.wildChooseColor .red {
    background: #EF5555;
    left: calc(50% - var(--chooseColBlockSize, 65px) / 2);
    top: var(--chooseColBlockDefaultPos);
}
.wildChooseColor .yellow {
    background: #FFF50F;
    top: calc(50% - var(--chooseColBlockSize, 65px) / 2);
    right: var(--chooseColBlockDefaultPos);
}
.wildChooseColor .green {
    background: #00CC5E;
    left: calc(50% - var(--chooseColBlockSize, 65px) / 2);
    bottom: var(--chooseColBlockDefaultPos);

}
.wildChooseColor .blue {
    background: #0066FF;
    top: calc(50% - var(--chooseColBlockSize, 65px) / 2);
    left: var(--chooseColBlockDefaultPos);
}

/* Chosen color */
.wildColorChoosen {
    display: none;
    height: 80px;
    width: 80px;
    margin: 1rem 1rem;
    background: #0066FF;    /* This gets set in js so the value doesnt matter per se*/
    border-radius: 5px;
    transform: rotate(45deg);
}
/* 
////////////////////////////////////////////////////////////////
////////////        
////////////////////////////////////////////////////////////////
*/

.direction.clockwise {
    transform: scaleX(1);

    /* -webkit-transition: 3s;
    -moz-transition: 3s;
    -ms-transition: 3s;
    -o-transition: 3s; */
    transition: 0.5s;
}

.direction.anticlockwise {
    transform: scaleX(-1);

    /* -webkit-transition: 3s;
    -moz-transition: 3s;
    -ms-transition: 3s;
    -o-transition: 3s; */
    transition: 0.5s;
}

.playerCtnHor p, .playerCtnVer p {
    margin: 0.5rem 0.5rem;
}


.player0 h1 {
    color: #efefef;
    font-weight: normal;
    font-family: 'Merienda', cursive;
    font-size: 32px;
    display: none;
}

.currentCard, .deckCard
{
    /* These two lines get set from javascript */
    /* animation-name: rotateCurrentCard; */
    /* animation-duration: 2s; */

    animation-delay: 0s;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-timing-function: linear;

    /* animation: rotateCurrentCard var(--currentCardAnimationTime) linear 0s infinite normal; */
}

@keyframes rotateCurrentCard {
    0%    { transform: rotateZ(0deg); filter: grayscale(0%);  }
    10%    { transform: rotateZ(36deg); filter: grayscale(100%);  } 
    50%    { transform: rotateZ(180deg); filter: grayscale(100%);   }
    100%  { transform: rotateZ(360deg); filter: grayscale(0%);  }
}

